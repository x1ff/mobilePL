/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    implementation libs.junit
    implementation libs.annotation.jvm
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    // https://mvnrepository.com/artifact/io.appium/java-client
    implementation group: 'io.appium', name: 'java-client', version: '9.4.0'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-api
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '4.28.1'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-remote-driver
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: '4.28.1'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-support
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '4.28.1'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.16'
    // https://mvnrepository.com/artifact/com.codeborne/selenide-appium
    implementation group: 'com.codeborne', name: 'selenide-appium', version: '7.8.0'
}

test {
    useJUnitPlatform()
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

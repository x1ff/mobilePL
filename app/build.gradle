/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
group = 'org.example'
version = '1.0-SNAPSHOT'

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    agent libs.aspectJWeaver
    // This dependency is used by the application.
    implementation libs.guava
    implementation libs.annotation.jvm
    // Import allure-bom to ensure correct versions of all the dependencies are used
    testImplementation platform(libs.allure)
    // Add necessary Allure dependencies to dependencies section
    testImplementation "io.qameta.allure:allure-junit5"
    testImplementation platform(libs.junitBom)
    testImplementation libs.jupiterApi
    testRuntimeOnly libs.jupiterEngine
    implementation libs.javaClient
    implementation libs.seleniumApi
    implementation libs.seleniumRemoteDriver
    implementation libs.seleniumSupport
    implementation libs.logbackClassic
    implementation libs.selenideAppium
    // https://allurereport.org/docs/guides/junit5-selenide-screenshots/
    testImplementation libs.allureSelenide
    testAnnotationProcessor(libs.allureDescriptionsJavadoc)
    runtimeOnly(libs.aspectJWeaver)
}

// https://docs.gradle.org/current/userguide/java_testing.html
test {
    ignoreFailures = true
    useJUnitPlatform()
    testLogging {
        events "passed"
    }
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}